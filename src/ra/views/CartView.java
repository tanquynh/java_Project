package ra.views;

import ra.service.CartService;
import ra.service.MenuService;
import ra.service.OrderService;
import ra.service.UserService;
import ra.models.Cart;
import ra.models.Order;
import ra.models.Product;
import ra.models.User;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import static ra.config.ConsoleColor.*;
import static ra.config.InputMethods.getInteger;
import static ra.config.InputMethods.getString;



public class CartView {
    private CartService cartService;
    private UserView userView;
    private UserService userService;
    private OrderService orderService;

    private MenuService menuService;
    private OrderHistoryView orderHistoryView;

    public CartView(CartService cartService, UserView userView, UserService userService, OrderService orderService, MenuService menuService, OrderHistoryView orderHistoryView) {
        this.cartService = cartService;
        this.userView = userView;
        this.userService = userService;
        this.orderService = orderService;
        this.menuService = menuService;
        this.orderHistoryView = orderHistoryView;
    }

    public void setUserView(UserView userView) {
        this.userView = userView;
    }

    public void displayMenuCart() {
        int selectCart;
        while (true) {
            System.out.println("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
            System.out.println("‚ïë              Menu-Gio hang           ‚ïë");
            System.out.println("‚ïü‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ï¢");
            System.out.println("‚ïë   1    ‚îÇ   Xem danh s√°ch gi·ªè h√†ng    ‚ïë");
            System.out.println("‚ïë   2    ‚îÇ   CH·ªânh s·ª≠a s·ªë l∆∞·ª£ng        ‚ïë");
            System.out.println("‚ïë   3    ‚îÇ   X√≥a 1 s·∫£n ph·∫©m            ‚ïë");
            System.out.println("‚ïë   4    ‚îÇ   X√≥a to√†n b·ªô s·∫£n ph·∫©m      ‚ïë");
            System.out.println("‚ïë   5    ‚îÇ   Thanh to√°n                ‚ïë");
            System.out.println("‚ïë   6    ‚îÇ   L·ªãch s·ª≠ mua h√†ng          ‚ïë");
            System.out.println("‚ïë   7    ‚îÇ   Quay l·∫°i menu tr∆∞·ªõc       ‚ïë");
            System.out.println("‚ïë   8    ‚îÇ   ƒêƒÉng xu·∫•t                 ‚ïë");
            System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïß‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
            System.out.println("Nhap lua chon cua ban : ");
            selectCart = getInteger();
            switch (selectCart) {
                case 1:

                    displayAllCart();
                    break;
                case 2:
                    updateQuantity();
                    break;
                case 3:
                    deleteProductInCart();
                    break;
                case 4:
                    deleteAllProductInCart();
                    break;
                case 5:
                    endPay();
                    break;
                case 6:
                    orderHistoryView.OrderMenuHistory();
                    break;
                case 7:
                    return;
                case 8:
                    userView.logout();
                    break;
                default:
                    System.err.println("--->> Lua chon khong phu hop. Vui long chon lai ‚ù§ ");
                    break;
            }
        }
    }


    private void endPay() {
        User user = cartService.userLogin();
        if (user.getCart().isEmpty()) {
            printlnMess("Ch∆∞a c√≥ ƒë∆°n h√†ng c·∫ßn thanh to√°n !!.");
            return;
        }
        Order newOrder = new Order();
        newOrder.setId(orderService.autoInc());

        // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn
        double total = 0;
        for (Cart ca : user.getCart()) {
            total += ca.getProduct().getPrice() * ca.getQuantity();
        }
        newOrder.setTotal(total);
        newOrder.setIdUser(user.getId());
        System.out.println("Nh·∫≠p t√™n ng∆∞·ªùi nh·∫≠n h√†ng: ");
        newOrder.setReceiver(getString());
        System.out.println("Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i ng∆∞·ªùi nh·∫≠n: ");
        newOrder.setNumberPhone(getString());
        System.out.println("Nh·∫≠p v√†o ƒë·ªãa ch·ªâ ng∆∞·ªùi nh·∫≠n:");
        newOrder.setAddress(getString());
        newOrder.setBuyDate(LocalDateTime.now());

        // Ti·∫øn h√†nh tr·ª´ ƒëi s·ªë l∆∞·ª£ng trong kho h√†ng
        for (Cart ca : user.getCart()) {
            Product pt = menuService.findById(ca.getProduct().getProductId());
            pt.setStock(pt.getStock() - ca.getQuantity());
            menuService.updateQuantity(pt);
        }

        printlnSuccess("ƒê·∫∑t h√†ng th√†nh c√¥ngüéàüéà.Vui l√≤ng ch·ªù x√°c nh·∫≠n !!.");
        orderService.save(newOrder);
        Order order = new Order();
        userService.save(user);
        order.setOrderDetail(user.getCart());
        user.setCart(new ArrayList<>());

    }


    private void deleteAllProductInCart() {
        cartService.deleteAll();
    }

    private void deleteProductInCart() {
        System.out.println("Nh·∫≠p v√†o ID");
        int idCart = getInteger();
        int index = cartService.findByIndex(idCart);

        if (index == -1) {
            System.err.println("S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i trong gi·ªè h√†ng.");
            return;
        }

        cartService.deleteCart(index);
    }


    private void updateQuantity() {
        System.out.println("Nh·∫≠p v√†o ID: ");
        int idCart = getInteger();
        User user =cartService.userLogin();
        List<Cart> carts = user.getCart();
        Cart cart = cartService.findById(idCart);

        if (cart == null) {
            printlnError("S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i trong gi·ªè h√†ng!!");
            return;
        }

        System.out.println("Nh·∫≠p v√†o s·ªë l∆∞·ª£ng mu·ªën c·∫≠p nh·∫≠t m·ªõi: ");
        int updateQuantity = getInteger();

        if (updateQuantity > cart.getProduct().getStock()) {
            printlnError("S·ªë l∆∞·ª£ng s·∫£n ph·∫©m v∆∞·ª£t qu√° t·ªìn kho.");
        } else {
            cart.setQuantity(updateQuantity);
            int index = cartService.findByIndex(idCart);
            carts.set(index, cart);
            printlnSuccess("C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng th√†nh c√¥ng üéàüéà.");
            userService.save(user);
        }
    }


    private void displayAllCart() {
        List<Cart> carts = cartService.userLogin().getCart();

        if (carts.isEmpty()) {
            printlnError("Gi·ªè h√†ng r·ªóng !!.");
            return;
        }
        System.out.println("|-----------------GI·ªé H√ÄNG------------------|");
        for (Cart ca : carts
        ) {
            ca.display();
        }
    }
}
